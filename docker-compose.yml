version: "3.8"

services:
  nginx:
    image: nginx:1.25.3-alpine3.18
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./nginx/conf.d:/etc/nginx/conf.d:ro"
    depends_on:
      - auth
      - api
#      - frontend
    ports:
      - "80:80"

  db:
    image: postgres:16-alpine3.19
    env_file:
      - ".env"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 5s
      interval: 5s
      retries: 10

  auth:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m auth
    env_file:
      - ".env"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ".:/opt"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m api
    env_file:
      - ".env"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ".:/opt"

#  frontend:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    command: python -m frontend
#    env_file:
#      - ".env"
#    depends_on:
#      db:
#        condition: service_healthy
#    volumes:
#      - ".:/opt"